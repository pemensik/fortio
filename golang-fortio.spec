# Generated by go2rpm 1.5.0
%bcond_without check
%bcond_with    online

# https://github.com/fortio/fortio
%global goipath         fortio.org/fortio
%global forgeurl        https://github.com/fortio/fortio
Version:                1.17.0

%gometa

%global common_description %{expand:
Fortio load testing library, command line tool, advanced echo server and web UI
in go (golang). Allows to specify a set query-per-second load and record
latency histograms and other useful stats.}

%global golicenses      LICENSE dflag/LICENSE
%global godocs          docs CONTRIBUTING.md README.md\\\
                        .testdata/payloadTest1.txt debian/changelog \\\
                        dflag/README.md dflag/configmap/README.md\\\
                        release/README.md
# missing: examples

Name:           fortio
Release:        %autorelease
Summary:        Fortio load testing library, command line tool, advanced echo server and web UI in go (golang). Allows to specify a set query-per-second load and record latency histograms and other useful stats

# Upstream license specification: Apache-2.0
License:        ASL 2.0
URL:            %{gourl}
Source0:        %{gosource}

BuildRequires:  golang(github.com/fsnotify/fsnotify)
BuildRequires:  golang(github.com/golang/protobuf/proto)
BuildRequires:  golang(github.com/google/uuid)
BuildRequires:  golang(golang.org/x/net/context)
BuildRequires:  golang(golang.org/x/net/http2)
BuildRequires:  golang(golang.org/x/net/http2/h2c)
BuildRequires:  golang(google.golang.org/grpc)
BuildRequires:  golang(google.golang.org/grpc/credentials)
BuildRequires:  golang(google.golang.org/grpc/health)
BuildRequires:  golang(google.golang.org/grpc/health/grpc_health_v1)
BuildRequires:  golang(google.golang.org/grpc/reflection)
BuildRequires:  sed

%if %{with check}
# Tests
BuildRequires:  golang(github.com/stretchr/testify/assert)
BuildRequires:  golang(github.com/stretchr/testify/require)
BuildRequires:  golang(github.com/stretchr/testify/suite)
BuildRequires:  openssl make
%endif

%description
%{common_description}

%gopkg

%prep
%goprep

%if %{without online}
# Requires online connections working, not available in mock
sed -e 's,func TestDefaultPort,func DisableDefaultPort,' \
    -e 's,func TestPayloadForFastClient,func DisablePayloadForFastClient,' \
    -e 's,func TestInsecureRequest,func DisableInsecureRequest,' \
    -i fhttp/http_test.go
%endif

%build
%gobuild -o %{gobuilddir}/bin/fortio %{goipath}
for cmd in fcurl histogram echosrv; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done

%install
%gopkginstall
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/
install -m 0755 -vd                     %{buildroot}%{_mandir}/man1
install -m 0755 -vp docs/fortio.1       %{buildroot}%{_mandir}/man1/

%if %{with check}
%check
make certs
%gocheck
%endif

%files
%license LICENSE dflag/LICENSE
%doc docs CONTRIBUTING.md README.md .testdata/payloadTest1.txt debian/changelog
%doc dflag/README.md dflag/configmap/README.md release/README.md
#%%doc examples
%{_bindir}/*
%{_mandir}/man1/fortio.1*

%gopkgfiles

%changelog
%autochangelog
